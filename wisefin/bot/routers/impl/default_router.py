from aiogram import Router
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message

default_router = Router()

class Registration(StatesGroup):
    waiting_for_name = State()
    waiting_for_age = State()


# === 2. –ö–æ–º–∞–Ω–¥–∞ /start ===
@default_router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    await state.set_state(Registration.waiting_for_name)


# === 3. –ü–æ–ª—É—á–∞–µ–º –∏–º—è ===
@default_router.message(Registration.waiting_for_name)
async def process_name(message: Message, state: FSMContext):
    name = message.text.strip()

    if len(name) < 2:
        await message.answer("–ò–º—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ üôÇ")
        return

    await state.update_data(name=name)
    await message.answer(f"–û—Ç–ª–∏—á–Ω–æ, {name}! –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
    await state.set_state(Registration.waiting_for_age)


# === 4. –ü–æ–ª—É—á–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç ===
@default_router.message(Registration.waiting_for_age)
async def process_age(message: Message, state: FSMContext):
    try:
        age = int(message.text)
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –≤–æ–∑—Ä–∞—Å—Ç —á–∏—Å–ª–æ–º üî¢")
        return

    user_data = await state.get_data()
    name = user_data["name"]

    await message.answer(f"–¢–µ–±—è –∑–æ–≤—É—Ç {name}, –∏ —Ç–µ–±–µ {age} –ª–µ—Ç. –ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! üéâ")

    # –ó–∞–≤–µ—Ä—à–∞–µ–º FSM
    await state.clear()


# === 5. –ö–æ–º–∞–Ω–¥–∞ /cancel –¥–ª—è —Å–±—Ä–æ—Å–∞ ===
@default_router.message(Command("cancel"))
async def cmd_cancel(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("–î–∏–∞–ª–æ–≥ —Å–±—Ä–æ—à–µ–Ω. –ú–æ–∂–µ–º –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ —Å /start üîÑ")